syntax = "proto3";
package sports;

option go_package = "/sports";

import "google/protobuf/timestamp.proto";

service Sports {
  /// ListEvents returns a collection of all events.
  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse) {}

  // FetchEventById returns a event for the requested id.
  rpc FetchEventById(EventRequestById) returns (Event) {}
}

/* Requests/Responses */

message ListEventsRequest {
  ListEventRequestFilter filter = 1;
}

message EventRequestById {
    int64 id = 1;
}

// Response to ListRaces call.
message ListEventsResponse {
  repeated Event events = 1;
}

// Filter for listing races.
message ListEventRequestFilter {
  repeated int64 ids = 1;

  optional string order_by = 3;
}

/* Resources */

// A Event resource.
message Event {

  // ID represents a unique identifier for the event.
  int64 id = 1;
  // Name is the official name given to the event.
  string name = 2;
  // Number represents the number of the event.
  int64 number = 3;
  // AdvertisedStartTime is the time the event is advertised to run.
  google.protobuf.Timestamp advertised_start_time = 4;
}

